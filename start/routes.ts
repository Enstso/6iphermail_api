/*
|--------------------------------------------------------------------------
| Routes file
|--------------------------------------------------------------------------
|
| The routes file is used for defining the HTTP routes.
|
*/

import AuthController from '#controllers/auth_controller';
import router from '@adonisjs/core/services/router'
import { middleware } from './kernel.js';
import SocialController from '#controllers/social_controller';
import MailController from '#controllers/mail_controller';
import { base64 } from '@adonisjs/core/helpers';

router.group(() => {
  router.post('/register', [AuthController, 'register']);
  router.post('/login', [AuthController, 'login']);
  router.get('/discord', [SocialController, 'discordRedirect'])
  router.get('/discord/callback', [SocialController, 'discordCallback'])
  router.get('/github', [SocialController, 'githubRedirect'])
  router.get('/github/callback', [SocialController, 'githubCallback'])
  router.get('/google', [SocialController, 'googleRedirect'])
  router.get('/google/callback', [SocialController, 'googleCallback'])
  router.get('/logout', [AuthController, 'logout']);
}).prefix('/api/auth')

router.group(() => {
  router.get('/mails', [MailController, 'getGmail'])
  router.get('/app-mails', [MailController, 'getGmailv2'])
  router.post('/mail/identifier', [MailController, 'identifierGmail'])
  //router.get('/mail/:id', [MailController, 'getMail'])
  router.get('/whois', [MailController, 'whoamiGmail'])
  router.get('/threads', [MailController, 'getThreads'])
}).prefix('/api/gmail/6iphermail').middleware(middleware.auth())

router.group(() => {
  router.get('/generateAuthCode', [AuthController, 'generateAuthCode'])
  router.get('/me', [AuthController, 'me'])
}).prefix('/api/6iphermail').middleware(middleware.auth())

router.post('/verifyAuthCode', [AuthController, 'verifyAuthCode'])

router.get('/test',(()=>{
    const test =base64.decode('PCFET0NUWVBFIGh0bWw-PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIG5hbWU9ImZvcm1hdC1kZXRlY3Rpb24iIGNvbnRlbnQ9ImVtYWlsPW5vIi8-PG1ldGEgbmFtZT0iZm9ybWF0LWRldGVjdGlvbiIgY29udGVudD0iZGF0ZT1ubyIvPjxzdHlsZSBub25jZT0ienc5cG0wcEtjS0MwQUFaTjNyb1VzdyI-LmF3bCBhIHtjb2xvcjogI0ZGRkZGRjsgdGV4dC1kZWNvcmF0aW9uOiBub25lO30gLmFibWwgYSB7Y29sb3I6ICMwMDAwMDA7IGZvbnQtZmFtaWx5OiBSb2JvdG8tTWVkaXVtLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmOyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lO30gLmFkZ2wgYSB7Y29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IHRleHQtZGVjb3JhdGlvbjogbm9uZTt9IC5hZmFsIGEge2NvbG9yOiAjYjBiMGIwOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7fSBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDBweCkgey52MnNwIHtwYWRkaW5nOiA2cHggMzBweCAwcHg7fSAudjJyc3Age3BhZGRpbmc6IDBweCAxMHB4O319IEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSB7Lm1kdjJydyB7cGFkZGluZzogNDBweCA0MHB4O319IDwvc3R5bGU-PGxpbmsgaHJlZj0iLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M_ZmFtaWx5PUdvb2dsZStTYW5zIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBub25jZT0ienc5cG0wcEtjS0MwQUFaTjNyb1VzdyIvPjwvaGVhZD48Ym9keSBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwOyIgYmdjb2xvcj0iI0ZGRkZGRiI-PHRhYmxlIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0eWxlPSJtaW4td2lkdGg6IDM0OHB4OyIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIGxhbmc9ImVuIj48dHIgaGVpZ2h0PSIzMiIgc3R5bGU9ImhlaWdodDogMzJweDsiPjx0ZD48L3RkPjwvdHI-PHRyIGFsaWduPSJjZW50ZXIiPjx0ZD48ZGl2IGl0ZW1zY29wZSBpdGVtdHlwZT0iLy9zY2hlbWEub3JnL0VtYWlsTWVzc2FnZSI-PGRpdiBpdGVtcHJvcD0iYWN0aW9uIiBpdGVtc2NvcGUgaXRlbXR5cGU9Ii8vc2NoZW1hLm9yZy9WaWV3QWN0aW9uIj48bGluayBpdGVtcHJvcD0idXJsIiBocmVmPSJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vQWNjb3VudENob29zZXI_RW1haWw9ZW5zdHNvYm9nb3NzQGdtYWlsLmNvbSZhbXA7Y29udGludWU9aHR0cHM6Ly9teWFjY291bnQuZ29vZ2xlLmNvbS9hbGVydC9udC8xNzE4ODI4MzY1MDAwP3JmbiUzRDEyNyUyNnJmbmMlM0QxJTI2ZWlkJTNELTU2NTQ5MTEzMzQwMDU1NDg5NiUyNmV0JTNEMCIvPjxtZXRhIGl0ZW1wcm9wPSJuYW1lIiBjb250ZW50PSJSZXZpZXcgQWN0aXZpdHkiLz48L2Rpdj48L2Rpdj48dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSJwYWRkaW5nLWJvdHRvbTogMjBweDsgbWF4LXdpZHRoOiA1MTZweDsgbWluLXdpZHRoOiAyMjBweDsiPjx0cj48dGQgd2lkdGg9IjgiIHN0eWxlPSJ3aWR0aDogOHB4OyI-PC90ZD48dGQ-PGRpdiBzdHlsZT0iYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLXdpZHRoOiB0aGluOyBib3JkZXItY29sb3I6I2RhZGNlMDsgYm9yZGVyLXJhZGl1czogOHB4OyBwYWRkaW5nOiA0MHB4IDIwcHg7IiBhbGlnbj0iY2VudGVyIiBjbGFzcz0ibWR2MnJ3Ij48aW1nIHNyYz0iaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vaW1hZ2VzL2JyYW5kaW5nL2dvb2dsZWxvZ28vMngvZ29vZ2xlbG9nb19jb2xvcl83NHgyNGRwLnBuZyIgd2lkdGg9Ijc0IiBoZWlnaHQ9IjI0IiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDE2cHg7IiBhbHQ9Ikdvb2dsZSI-PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6ICYjMzk7R29vZ2xlIFNhbnMmIzM5OyxSb2JvdG8sUm9ib3RvRHJhZnQsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Ym9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGFkY2UwOyBjb2xvcjogcmdiYSgwLDAsMCwwLjg3KTsgbGluZS1oZWlnaHQ6IDMycHg7IHBhZGRpbmctYm90dG9tOiAyNHB4O3RleHQtYWxpZ246IGNlbnRlcjsgd29yZC1icmVhazogYnJlYWstd29yZDsiPjxkaXYgc3R5bGU9ImZvbnQtc2l6ZTogMjRweDsiPjxhPjZpcGhlcm1haWw8L2E-IHdhcyBncmFudGVkIGFjY2VzcyB0byB5b3VyIEdvb2dsZSZuYnNwO0FjY291bnQgPC9kaXY-PHRhYmxlIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJtYXJnaW4tdG9wOjhweDsiPjx0ciBzdHlsZT0ibGluZS1oZWlnaHQ6IG5vcm1hbDsiPjx0ZCBhbGlnbj0icmlnaHQiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjhweDsiPjxpbWcgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIiBzdHlsZT0id2lkdGg6IDIwcHg7IGhlaWdodDogMjBweDsgdmVydGljYWwtYWxpZ246IHN1YjsgYm9yZGVyLXJhZGl1czogNTAlOzsiIHNyYz0iaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmc3TkpRT0ZmMVRJVXpNMExZZWdWVVA5cWpPSS1EbVVmUi1QT1VaMGFDZTNnRjYtZ1M9czk2LWMiIGFsdD0iIj48L3RkPjx0ZD48YSBzdHlsZT0iZm9udC1mYW1pbHk6ICYjMzk7R29vZ2xlIFNhbnMmIzM5OyxSb2JvdG8sUm9ib3RvRHJhZnQsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Y29sb3I6IHJnYmEoMCwwLDAsMC44Nyk7IGZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDIwcHg7Ij5lbnN0c29ib2dvc3NAZ21haWwuY29tPC9hPjwvdGQ-PC90cj48L3RhYmxlPiA8L2Rpdj48ZGl2IHN0eWxlPSJmb250LWZhbWlseTogUm9ib3RvLVJlZ3VsYXIsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7IGZvbnQtc2l6ZTogMTRweDsgY29sb3I6IHJnYmEoMCwwLDAsMC44Nyk7IGxpbmUtaGVpZ2h0OiAyMHB4O3BhZGRpbmctdG9wOiAyMHB4OyB0ZXh0LWFsaWduOiBsZWZ0OyI-PGJyPklmIHlvdSBkaWQgbm90IGdyYW50IGFjY2VzcywgeW91IHNob3VsZCBjaGVjayB0aGlzIGFjdGl2aXR5IGFuZCBzZWN1cmUgeW91ciBhY2NvdW50LjxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiAzMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48YSBocmVmPSJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vQWNjb3VudENob29zZXI_RW1haWw9ZW5zdHNvYm9nb3NzQGdtYWlsLmNvbSZhbXA7Y29udGludWU9aHR0cHM6Ly9teWFjY291bnQuZ29vZ2xlLmNvbS9hbGVydC9udC8xNzE4ODI4MzY1MDAwP3JmbiUzRDEyNyUyNnJmbmMlM0QxJTI2ZWlkJTNELTU2NTQ5MTEzMzQwMDU1NDg5NiUyNmV0JTNEMCIgdGFyZ2V0PSJfYmxhbmsiIGxpbmstaWQ9Im1haW4tYnV0dG9uLWxpbmsiIHN0eWxlPSJmb250LWZhbWlseTogJiMzOTtHb29nbGUgU2FucyYjMzk7LFJvYm90byxSb2JvdG9EcmFmdCxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjsgbGluZS1oZWlnaHQ6IDE2cHg7IGNvbG9yOiAjZmZmZmZmOyBmb250LXdlaWdodDogNDAwOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7Zm9udC1zaXplOiAxNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6IDEwcHggMjRweDtiYWNrZ3JvdW5kLWNvbG9yOiAjNDE4NEYzOyBib3JkZXItcmFkaXVzOiA1cHg7IG1pbi13aWR0aDogOTBweDsiPkNoZWNrIGFjdGl2aXR5PC9hPjwvZGl2PjwvZGl2PjxkaXYgc3R5bGU9InBhZGRpbmctdG9wOiAyMHB4OyBmb250LXNpemU6IDEycHg7IGxpbmUtaGVpZ2h0OiAxNnB4OyBjb2xvcjogIzVmNjM2ODsgbGV0dGVyLXNwYWNpbmc6IDAuM3B4OyB0ZXh0LWFsaWduOiBjZW50ZXIiPllvdSBjYW4gYWxzbyBzZWUgc2VjdXJpdHkgYWN0aXZpdHkgYXQ8YnI-PGEgc3R5bGU9ImNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO3RleHQtZGVjb3JhdGlvbjogaW5oZXJpdDsiPmh0dHBzOi8vbXlhY2NvdW50Lmdvb2dsZS5jb20vbm90aWZpY2F0aW9uczwvYT48L2Rpdj48L2Rpdj48ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyI-PGRpdiBzdHlsZT0iZm9udC1mYW1pbHk6IFJvYm90by1SZWd1bGFyLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO2NvbG9yOiByZ2JhKDAsMCwwLDAuNTQpOyBmb250LXNpemU6IDExcHg7IGxpbmUtaGVpZ2h0OiAxOHB4OyBwYWRkaW5nLXRvcDogMTJweDsgdGV4dC1hbGlnbjogY2VudGVyOyI-PGRpdj5Zb3UgcmVjZWl2ZWQgdGhpcyBlbWFpbCB0byBsZXQgeW91IGtub3cgYWJvdXQgaW1wb3J0YW50IGNoYW5nZXMgdG8geW91ciBHb29nbGUgQWNjb3VudCBhbmQgc2VydmljZXMuPC9kaXY-PGRpdiBzdHlsZT0iZGlyZWN0aW9uOiBsdHI7Ij4mY29weTsgMjAyNCBHb29nbGUgSXJlbGFuZCBMdGQuLCA8YSBjbGFzcz0iYWZhbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBSb2JvdG8tUmVndWxhcixIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtjb2xvcjogcmdiYSgwLDAsMCwwLjU0KTsgZm9udC1zaXplOiAxMXB4OyBsaW5lLWhlaWdodDogMThweDsgcGFkZGluZy10b3A6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPkdvcmRvbiBIb3VzZSwgQmFycm93IFN0cmVldCwgRHVibGluIDQsIElyZWxhbmQ8L2E-PC9kaXY-PC9kaXY-PC9kaXY-PC90ZD48dGQgd2lkdGg9IjgiIHN0eWxlPSJ3aWR0aDogOHB4OyI-PC90ZD48L3RyPjwvdGFibGU-PC90ZD48L3RyPjx0ciBoZWlnaHQ9IjMyIiBzdHlsZT0iaGVpZ2h0OiAzMnB4OyI-PHRkPjwvdGQ-PC90cj48L3RhYmxlPjwvYm9keT48L2h0bWw-');
    console.log(test);
    return test;
}))